/*
 MCL
 Copyright (c) 2012-24, Enzo De Sena
 All rights reserved.
 
 Authors: Enzo De Sena, enzodesena@gmail.com
 */


#include "graphiceq.h"

namespace mcl {
  
bool GraphicEq::Test() noexcept {
  
  
  std::vector<Real> fc({ 250.0, 500.0, 1000.0, 2000.0, 4000.0 });
  std::vector<Real> gains({0.9, 0.85, 0.88, 0.8, 0.75});
  Real Q = 0.98;
  int fs = 48e3;
  int num_samples = 256;
  
  std::vector<Real> output_data(num_samples);
  std::vector<Real> input_data(num_samples);
  input_data[0] = 1.0;
  
  GraphicEq eq(gains, fc, Q, fs);
  eq.Filter(&input_data[0], num_samples, &output_data[0]);

  std::vector<Real> output_data_cmp({0.789794889,  -0.003782045, 0.010303789, 0.015598704, 0.016070502, 0.014404195, 0.011990325, 0.009409928, 0.006905777, 0.004641463, 0.002764293, 0.001371886, 0.000472902, -1.49692E-05, -0.000230256, -0.000318545, -0.000392073, -0.000510555, -0.000683466, -0.00088612, -0.001079845, -0.001228757, -0.001309534, -0.001314137, -0.001247528, -0.001123023, -0.00095745, -0.000767407, -0.000567046, -0.000367201, -0.000175465, 3.25643E-06, 0.000166057, 0.000311396, 0.000438616, 0.000547623, 0.000638684, 0.000712316, 0.000769229, 0.000810289, 0.000836493, 0.000848941, 0.000848812, 0.00083733, 0.000815732, 0.000785243, 0.000747048, 0.00070228, 0.000652002, 0.00059721, 0.000538826, 0.000477706, 0.00041464, 0.000350358, 0.000285533, 0.000220783, 0.000156673, 9.3715E-05, 3.23695E-05, -2.69575E-05, -8.39128E-05, -0.000138197, -0.000189563, -0.000237817, -0.000282813, -0.000324455, -0.000362692, -0.000397514, -0.000428949, -0.00045706, -0.00048194, -0.000503705, -0.000522496, -0.000538468, -0.000551788, -0.000562634, -0.000571189, -0.000577634, -0.000582155, -0.000584928, -0.000586128, -0.00058592, -0.000584461, -0.000581897, -0.000578364, -0.000573987, -0.000568878, -0.000563138, -0.000556859, -0.000550121, -0.000542991, -0.000535532, -0.000527792, -0.000519816, -0.000511638, -0.000503287, -0.000494786, -0.000486153, -0.000477402, -0.000468543, -0.000459583, -0.000450528, -0.000441379, -0.00043214, -0.000422812, -0.000413395, -0.000403891, -0.000394302, -0.000384628, -0.000374873, -0.00036504, -0.000355133, -0.000345158, -0.000335122, -0.000325031, -0.000314895, -0.000304722, -0.000294524, -0.000284312, -0.000274096, -0.00026389, -0.000253706, -0.000243558, -0.000233458, -0.00022342, -0.000213457, -0.000203583, -0.000193809, -0.00018415, -0.000174615, -0.000165218, -0.000155968, -0.000146876, -0.000137952, -0.000129204, -0.00012064, -0.000112267, -0.000104092, -9.61207E-05, -8.8357E-05, -8.08055E-05, -7.34694E-05, -6.63512E-05, -5.9453E-05, -5.27758E-05, -4.63203E-05, -4.00865E-05, -3.40739E-05, -2.82816E-05, -2.27079E-05, -1.73511E-05, -1.22089E-05, -7.27869E-06, -2.55762E-06, 1.95746E-06, 6.2699E-06, 1.03832E-05, 1.43012E-05, 1.80275E-05, 2.15662E-05, 2.49213E-05, 2.80968E-05, 3.10968E-05, 3.39255E-05, 3.6587E-05, 3.90853E-05, 4.14246E-05, 4.3609E-05, 4.56425E-05, 4.75291E-05, 4.92727E-05, 5.08773E-05, 5.23467E-05, 5.36847E-05, 5.48951E-05, 5.59815E-05, 5.69476E-05, 5.7797E-05, 5.85332E-05, 5.91596E-05, 5.96799E-05, 6.00972E-05, 6.0415E-05, 6.06367E-05, 6.07653E-05, 6.08042E-05, 6.07566E-05, 6.06256E-05, 6.04143E-05, 6.01258E-05, 5.97631E-05, 5.93292E-05, 5.88271E-05, 5.82598E-05, 5.76301E-05, 5.69409E-05, 5.61951E-05, 5.53954E-05, 5.45446E-05, 5.36454E-05, 5.27005E-05, 5.17126E-05, 5.06842E-05, 4.96179E-05, 4.85163E-05, 4.73818E-05, 4.62169E-05, 4.50239E-05, 4.38053E-05, 4.25633E-05, 4.13001E-05, 4.00181E-05, 3.87193E-05, 3.74058E-05, 3.60798E-05, 3.47433E-05, 3.33981E-05, 3.20463E-05, 3.06897E-05, 2.93302E-05, 2.79693E-05, 2.6609E-05, 2.52508E-05, 2.38964E-05, 2.25473E-05, 2.12049E-05, 1.98709E-05, 1.85465E-05, 1.72331E-05, 1.59321E-05, 1.46446E-05, 1.33719E-05, 1.2115E-05, 1.08752E-05, 9.65344E-06, 8.45071E-06, 7.26798E-06, 6.10613E-06, 4.96603E-06, 3.84847E-06, 2.75421E-06, 1.68396E-06, 6.38376E-07, -3.81922E-07, -1.37636E-06, -2.34443E-06, -3.28563E-06, -4.19953E-06, -5.08573E-06, -5.94389E-06, -6.77369E-06, -7.57487E-06, -8.34718E-06, -9.09045E-06, -9.80452E-06, -1.04893E-05});
  ASSERT(IsEqual(output_data_cmp, output_data));
  
  ASSERT(false);
  
  return true;
}

} // namespace mcl
